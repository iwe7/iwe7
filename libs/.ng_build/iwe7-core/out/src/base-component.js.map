{"version":3,"file":"base-component.js","sourceRoot":"","sources":["base-component.ts"],"names":[],"mappings":";;;;AACA,OAAO,EACL,KAAK,EAMN,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,MAAM,CAAC;AACzC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;;;;;AAE1D,MAAM;;;;IAIJ,YAAmB,EAAqB;QAArB,OAAE,GAAF,EAAE,CAAmB;qBAHR,IAAI,UAAU,EAAE;;2BAEzB,KAAK;KACgB;;;;;IAE5C,WAAW,CAAC,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;SACF;KACF;;;;;IAID,WAAW;QACT,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;;;;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;;;;;IAED,QAAQ,CAAC,KAAoB;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;;;;IAEO,cAAc;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK;;QAEhB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,oBAAE,EAAO,EAAC,CAAC,EACxD,IAAI,CAAC,KAAK,CACX,CAAC,IAAI;;QAEJ,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;;QAE1C,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CACpC,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACzB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SACxB,CAAC,CAAC;;;;sBA1CJ,KAAK","sourcesContent":["// 给予rxjs设计的组件\nimport {\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { Observable, merge } from 'rxjs';\nimport { first, filter, takeWhile } from 'rxjs/operators';\n\nexport abstract class Iwe7Base<T> implements OnChanges, OnInit, OnDestroy {\n  @Input() props: Observable<T> = new Observable();\n  // 需要注销开关\n  needDestory: boolean = false;\n  constructor(public cd: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('props' in changes) {\n      if (!changes['props'].isFirstChange) {\n        this.__propsHandler();\n      }\n    }\n  }\n  /**\n   * 注销\n   */\n  ngOnDestroy() {\n    this.needDestory = true;\n  }\n\n  ngOnInit() {\n    this.__propsHandler();\n  }\n\n  setProps(props: Observable<T>) {\n    this.props = merge(this.props, props);\n    this.__propsHandler();\n  }\n\n  private __propsHandler() {\n    this.props = merge(\n      // 添加默认值\n      this.props.pipe(first((val, idx) => idx === 0, {} as T)),\n      this.props\n    ).pipe(\n      // 去除{}\n      filter(val => Object.keys(val).length > 0),\n      // 自动注销\n      takeWhile(val => !this.needDestory)\n    );\n    this.props.subscribe(res => {\n      this.onPropsChange(res);\n      this.cd.markForCheck();\n    });\n  }\n\n  public abstract onPropsChange(res: T): void;\n}\n"]}