{"version":3,"file":"chache-memory.service.js","sourceRoot":"","sources":["chache-memory.service.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAc,MAAM,MAAM,CAAC;AAC3C,OAAO,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;;;;;;AAEjC,MAAM;IAGJ;oBAFyB,IAAI,GAAG,EAAE;qBACC,IAAI,OAAO,EAAE;KAChC;;;;IAEhB,QAAQ;QACN,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;IAED,IAAI,CAAC,IAAS;QACZ,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;KAC3B;;;;;IAED,GAAG,CAAC,GAAW;QACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;KACjC;;;;;;IAED,GAAG,CAAC,GAAW,EAAE,GAAQ;QACvB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC;KACb;;;;;IAED,MAAM,CAAC,GAAW;QAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC;KACb;;;;IAED,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC;KACb;;;;;IAED,GAAG,CAAC,GAAW;QACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC3B;;;;;IAED,OAAO,CACL,UAAoE;QAEpE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC;KACb;;;;;IAED,kBAAkB,CAAC,GAAW;QAC5B,qBAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;YAC9B,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;SAClB,CAAC,CAAC;QACH,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;KACjD;;;;;IAED,qBAAqB,CAAC,GAAW;QAC/B,qBAAI,IAAI,GAAQ,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC1C,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACX,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxB,qBAAI,IAAI,GAAQ,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;gBACtC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;aACzB,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,CAAC,IAAI,CAAC;SACb;KACF;CACF;;;;;;;;;;AAKD,MAAM,yBAA6B,SAAQ,WAAc;IAEvD;QACE,KAAK,EAAE,CAAC;oBAFK,0CAA0C;KAGxD;;;YAPF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { map } from 'underscore';\n\nexport abstract class CacheMemory<T> {\n  data: Map<string, any> = new Map();\n  data$: Subject<Map<string, any>> = new Subject();\n  constructor() {}\n\n  onChange(): Observable<Map<string, any>> {\n    return this.data$;\n  }\n\n  init(data: any) {\n    this.data = new Map(data);\n  }\n  // 取数据\n  get(key: string): T {\n    return this.data.get(key) || {};\n  }\n  // 设置数据\n  set(key: string, val: any): this {\n    this.data.set(key, val);\n    this.data$.next(this.data);\n    return this;\n  }\n  // 删除数据\n  delete(key: string): this {\n    this.data.delete(key);\n    this.data$.next(this.data);\n    return this;\n  }\n  // 清空\n  clear(): this {\n    this.data.clear();\n    this.data$.next(this.data);\n    return this;\n  }\n  // 是否存在\n  has(key: string) {\n    return this.data.has(key);\n  }\n  // 循环\n  forEach(\n    callbackfn: (value: any, key: string, map: Map<string, any>) => void\n  ): this {\n    this.data.forEach(callbackfn);\n    return this;\n  }\n  // 保存到缓存\n  saveToLocalStorage(key: string) {\n    let data = {};\n    this.forEach((item, key, map) => {\n      data[key] = item;\n    });\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n\n  initFromLoacalStorage(key: string) {\n    let item: any = localStorage.getItem(key);\n    if (!!item) {\n      item = JSON.parse(item);\n      let data: any = map(item, (item, key) => {\n        return [key + '', item];\n      });\n      this.data = new Map(data);\n      return this;\n    }\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheMemoryService<T> extends CacheMemory<T> {\n  name: string = '大家好，我是cache memory service，你能把临时数据交给我保存！';\n  constructor(){\n    super();\n  }\n}\n"]}