{
  "version": 3,
  "file": "iwe7.js",
  "sources": [
    "ng://iwe7/out/core/src/base-component.ts",
    "ng://iwe7/out/core/src/core.module.ts",
    "ng://iwe7/out/icss/src/icss.service.ts",
    "ng://iwe7/out/icss/src/icss.module.ts",
    "ng://iwe7/out/lazy-load/src/base.ts",
    "ng://iwe7/out/lazy-load/src/lazy-loader.ts",
    "ng://iwe7/out/lazy-load/src/lazy-component-module-factory.ts",
    "ng://iwe7/out/lazy-load/src/token.ts",
    "ng://iwe7/out/lazy-load/src/lazy-load.module.ts"
  ],
  "sourcesContent": [
    "// 给予rxjs设计的组件\nimport {\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { Observable, merge } from 'rxjs';\nimport { first, filter, takeWhile } from 'rxjs/operators';\n\nexport class BaseComponent implements OnChanges, OnInit, OnDestroy {\n  @Input() props: Observable<any> = new Observable();\n  // 需要注销开关\n  needDestory: boolean = false;\n  constructor(\n    public cd: ChangeDetectorRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('props' in changes) {\n      if (!changes['props'].isFirstChange) {\n        this.__propsHandler();\n      }\n    }\n  }\n  /**\n   * 注销\n   */\n  ngOnDestroy() {\n    this.needDestory = true;\n  }\n\n  ngOnInit() {\n    this.__propsHandler();\n  }\n\n  setProps(props: Observable<any>) {\n    this.props = merge(this.props, props);\n    this.__propsHandler();\n  }\n\n  private __propsHandler() {\n    this.props = merge(\n      // 添加默认值\n      this.props.pipe(first((val, idx) => idx === 0, {})),\n      this.props\n    ).pipe(\n      // 去除{}\n      filter(val => Object.keys(val).length > 0),\n      // 自动注销\n      takeWhile(val => !this.needDestory)\n    );\n    this.props.subscribe(res => {\n      this.cd.markForCheck();\n    });\n  }\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  exports: [],\n  entryComponents: []\n})\nexport class Iwe7CoreModule {}\n",
    "import { Injectable, ElementRef } from '@angular/core';\nimport { Subject, Observable, of, MonoTypeOperatorFunction, merge } from 'rxjs';\nimport { map, scan, throttle, throttleTime, first } from 'rxjs/operators';\nexport interface IcssInterface {\n  [key: string]: Observable<any>;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class IcssService {\n  state: any = {};\n  constructor() {}\n  init(ob: IcssInterface, ele?: ElementRef) {\n    const obs: Observable<{ [key: string]: any }>[] = [];\n    for (const key in ob) {\n      const newOb = ob[key].pipe(\n        map(res => {\n          return {\n            [`${key}`]: res\n          };\n        })\n      );\n      obs.push(newOb);\n    }\n    // 合并流\n    const mer = merge(...obs).pipe(\n      scan((state, style) => {\n        return { ...state, ...style };\n      }, {}),\n      map(style => {\n        this.styledash(ele.nativeElement).set(style);\n        return style;\n      })\n    );\n    mer.pipe(first()).subscribe(res => {\n      this.state = res;\n    });\n    mer.subscribe(res => {});\n    return mer;\n  }\n\n  getState(key?: string) {\n    if (!!key) {\n      return this.state[key] || {};\n    }\n    return this.state;\n  }\n\n  private parse(val: any) {\n    return typeof val === 'boolean' ? (!!val ? 1 : 0) : val;\n  }\n\n  private styledash(target: HTMLElement) {\n    return {\n      set: (key, val?) => {\n        if (typeof key === 'object' && val === undefined) {\n          return Object.keys(key).forEach(subKey =>\n            this.styledash(target).set(subKey, key[subKey])\n          );\n        }\n        if (typeof val === 'object') {\n          return Object.keys(val).forEach(subkey => {\n            this.styledash(target).set(`${key}-${subkey}`, val[subkey]);\n          });\n        }\n        return target.style.setProperty(`--${key}`, this.parse(val) as string);\n      },\n      get: key => target.style.getPropertyValue(`--${key}`)\n    };\n  }\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class IcssModule {}\n",
    "import { Type } from '@angular/core';\n// 核心基础\nexport abstract class LazyComponentModuleBase {\n  public abstract getComponentByName(key: string): Type<any>;\n}\n",
    "import {\n  InjectionToken,\n  Injectable,\n  NgModuleFactoryLoader,\n  NgModuleRef,\n  Inject,\n  ViewContainerRef\n} from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\n\nimport { LazyComponentsInterface } from './interface';\nimport { LAZY_COMPONENTS } from './token';\nimport { LazyComponentModuleFactory } from './lazy-component-module-factory';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LazyLoaderService {\n  // 组件库\n  components: Map<string, string> = new Map();\n  lazyComponentModuleFactory: LazyComponentModuleFactory;\n\n  constructor(\n    private moduleFactoryLoader: NgModuleFactoryLoader,\n    private moduleRef: NgModuleRef<any>,\n    @Inject(LAZY_COMPONENTS)\n    public lazyComponentConfig: LazyComponentsInterface[]\n  ) {\n    this.lazyComponentModuleFactory = new LazyComponentModuleFactory(\n      this.moduleFactoryLoader\n    );\n    this.lazyComponentConfig.map(res => {\n      this.components.set(res.path, res.loadChildren);\n    });\n  }\n\n  init(element: HTMLElement, view: ViewContainerRef): Observable<void> {\n    const selectors: any[] = Array.from(this.components.keys()).filter(s =>\n      element.querySelector(s)\n    );\n    if (!selectors.length) {\n      return of(undefined);\n    }\n    return fromPromise(\n      Promise.all(selectors.map(s => this.create(s, view))).then(\n        result => undefined\n      )\n    );\n  }\n\n  private create(selector: string, view: ViewContainerRef) {\n    let path = this.components.get(selector);\n    return this.lazyComponentModuleFactory\n      .getComponentModuleByPath(path)\n      .then(res => {\n        let instance = res.getComponent(selector, this.moduleRef.injector);\n        view.createComponent(instance);\n      });\n  }\n}\n",
    "import {\n  NgModuleFactoryLoader,\n  NgModuleFactory,\n  Injector,\n  NgModuleRef,\n  Type,\n  ComponentFactory\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LazyComponentModuleBase } from './base';\n\nconst lazyComponentModule: Map<string, LazyComponentModule<any>> = new Map();\n/**\n * 懒加载module factory\n */\nexport class LazyComponentModuleFactory {\n  /**\n   * 构造器\n   */\n  constructor(private moduleFactoryLoader: NgModuleFactoryLoader) {}\n  /**\n   * 加载\n   */\n  private load(\n    path: string\n  ): Promise<LazyComponentModule<LazyComponentModuleBase>> {\n    return new Promise((resolve, reject) => {\n      this.moduleFactoryLoader\n        .load(path)\n        .then(moduleFactory => {\n          let module = new LazyComponentModule<LazyComponentModuleBase>(\n            moduleFactory\n          );\n          lazyComponentModule.set(path, module);\n          resolve(module);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n  /**\n   * 根据路径获取组件module\n   */\n  public getComponentModuleByPath(\n    path: string\n  ): Promise<LazyComponentModule<LazyComponentModuleBase>> {\n    let cacheLazyComponentModule = lazyComponentModule.get(path);\n    if (cacheLazyComponentModule) {\n      return new Promise((resolve, reject) => {\n        resolve(cacheLazyComponentModule);\n      });\n    } else {\n      return this.load(path);\n    }\n  }\n}\n\n// 懒加载module\nexport class LazyComponentModule<T> {\n  constructor(public moduleFactory: NgModuleFactory<LazyComponentModuleBase>) {}\n  // 获取component\n  getComponent(selector: string, injector?: Injector): ComponentFactory<any> {\n    const moduleRef = this.moduleFactory.create(injector);\n    const componentFactoryResolver = moduleRef.componentFactoryResolver;\n    const element = moduleRef.instance.getComponentByName(selector);\n    return componentFactoryResolver.resolveComponentFactory(element);\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\nimport { LazyComponentsInterface } from './interface';\nexport const LAZY_COMPONENTS = new InjectionToken<LazyComponentsInterface[]>(\n  'LAZY_COMPONENTS',\n  {\n    providedIn: 'root',\n    factory: (): LazyComponentsInterface[] => []\n  }\n);\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ROUTES } from '@angular/router';\nimport { LazyComponentsInterface } from './interface';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: []\n})\nexport class Iwe7LazyLoadModule {\n  public static forRoot(\n    lazyComponents: LazyComponentsInterface[]\n  ): ModuleWithProviders {\n    return {\n      ngModule: Iwe7LazyLoadModule,\n      providers: [\n        {\n          provide: ROUTES,\n          useValue: lazyComponents,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
